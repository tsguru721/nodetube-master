script.

  function updateLastWatchedTime(){

    var csrf = '#{_csrf}';

    var mediaUniqueTag = '#{upload.uniqueTag}'

    var secondsWatched = Math.round(player.currentTime);

    console.log('updating last watched time: ' + secondsWatched);

    var data = {
      _csrf: csrf,
      uniqueTag: mediaUniqueTag,
      secondsWatched
    }

    $.ajax({
      type: 'POST',
      url: `/api/updateLastWatchedTime`,
      data,
      success: function (data) {
        //- console.log(data);

        // Shows undefined when at 100%
        console.log('successfully hit backend')
        console.log(data);

      },
      error: function (err) {
        console.log(err);
      }
    });
  }

  setInterval(function(){
    updateLastWatchedTime()
  }, 1000 * 90)

  function forHumans(seconds) {
    var levels = [
      [Math.floor(seconds / 31536000), 'years'],
      [Math.floor((seconds % 31536000) / 86400), 'days'],
      [Math.floor(((seconds % 31536000) % 86400) / 3600), 'hours'],
      [Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 'minutes'],
      [(((seconds % 31536000) % 86400) % 3600) % 60, 'seconds'],
    ];
    var returntext = '';

    for (var i = 0, max = levels.length; i < max; i++) {
      if (levels[i][0] === 0) continue;
      returntext += ' ' + levels[i][0] + ' ' + (levels[i][0] === 1 ? levels[i][1].substr(0, levels[i][1].length - 1) : levels[i][1]);
    }
    ;
    return returntext.trim();
  }

  $(document).ready(function () {
    $('.save-last-watched-button').on('click', function () {

      if (player && player.currentTime) {
        updateLastWatchedTime()

        var currentTime = Math.round(player.currentTime);

        var humanReadable = forHumans(currentTime)

        swal('Saved last watched time at ' + humanReadable);
      }

    })
  })

